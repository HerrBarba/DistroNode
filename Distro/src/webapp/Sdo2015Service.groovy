
package webapp;

import java.net.MalformedURLException
import java.net.URL
import javax.xml.namespace.QName
import javax.xml.ws.Service
import javax.xml.ws.WebEndpoint
import javax.xml.ws.WebServiceClient
import javax.xml.ws.WebServiceException
import javax.xml.ws.WebServiceFeature


/**
 * SDO 2015 Service
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(
	name = "Sdo2015Service",
	targetNamespace = "http://localhost:4444/sdo2015",
	wsdlLocation = "file:/./Distro.wsdl")
public class Sdo2015Service extends Service {

    private final static URL SDO2015SERVICE_WSDL_LOCATION
    private final static WebServiceException SDO2015SERVICE_EXCEPTION
    private final static QName SDO2015SERVICE_QNAME = new QName("http://localhost:4444/sdo2015", "Sdo2015Service")

    static {
        URL url = null
        WebServiceException e = null
        try {
            url = new URL("file:/./Distro.wsdl")
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex)
        }
        SDO2015SERVICE_WSDL_LOCATION = url
        SDO2015SERVICE_EXCEPTION = e
    }

    public Sdo2015Service() {
        super(__getWsdlLocation(), SDO2015SERVICE_QNAME)
    }

    public Sdo2015Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), SDO2015SERVICE_QNAME, features)
    }

    public Sdo2015Service(URL wsdlLocation) {
        super(wsdlLocation, SDO2015SERVICE_QNAME)
    }

    public Sdo2015Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SDO2015SERVICE_QNAME, features)
    }

    public Sdo2015Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName)
    }

    public Sdo2015Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features)
    }

    /**
     * 
     * @return
     *     returns Sdo2015PortType
     */
    @WebEndpoint(name = "Sdo2015Port")
    public Sdo2015PortType getSdo2015Port() {
        return super.getPort(new QName("http://localhost:4444/sdo2015", "Sdo2015Port"), Sdo2015PortType.class)
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Sdo2015PortType
     */
    @WebEndpoint(name = "Sdo2015Port")
    public Sdo2015PortType getSdo2015Port(WebServiceFeature... features) {
        return super.getPort(new QName("http://localhost:4444/sdo2015", "Sdo2015Port"), Sdo2015PortType.class, features)
    }

    private static URL __getWsdlLocation() {
        if (SDO2015SERVICE_EXCEPTION != null) {
            throw SDO2015SERVICE_EXCEPTION
        }
        return SDO2015SERVICE_WSDL_LOCATION
    }

}
